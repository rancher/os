include build.conf
FORCE_PULL := 0
DEV_BUILD  := 0


bin/rancheros:
	mkdir -p $(dir $@)
	go generate
	go build -tags netgo -installsuffix netgo -ldflags "-X github.com/rancher/os/config.VERSION $(VERSION) -linkmode external -extldflags -static" -o $@
	strip --strip-all $@


pwd := $(shell pwd)
include scripts/build-common


assets/docker:
	mkdir -p $(dir $@)
	curl -L "$(DOCKER_BINARY_URL)" > $@
	chmod +x $@


$(DIST)/artifacts/vmlinuz: $(BUILD)/kernel/
	mkdir -p $(dir $@)
	mv $(BUILD)/kernel/boot/vmlinuz* $@


$(BUILD)/kernel/:
	mkdir -p $@
	([ -e "$(COMPILED_KERNEL_URL)" ] && cat "$(COMPILED_KERNEL_URL)" || curl -L "$(COMPILED_KERNEL_URL)") | tar -xzf - -C $@


$(BUILD)/images.tar: bin/rancheros
	FORCE_PULL=$(FORCE_PULL) ./scripts/mk-images-tar.sh


$(DIST)/artifacts/initrd: bin/rancheros assets/docker $(BUILD)/kernel/ $(BUILD)/images.tar
	mkdir -p $(dir $@)
	DFS_IMAGE=$(DFS_IMAGE) DEV_BUILD=$(DEV_BUILD) ./scripts/mk-initrd.sh


$(DIST)/artifacts/rancheros.iso: minimal
	./scripts/mk-rancheros-iso.sh


$(DIST)/artifacts/iso-checksums.txt: $(DIST)/artifacts/rancheros.iso
	./scripts/mk-iso-checksums-txt.sh


version:
	@echo $(VERSION)

installer: minimal
	docker build -t $(IMAGE_NAME):$(VERSION) .

build-all: minimal installer iso

minimal: $(DIST)/artifacts/initrd $(DIST)/artifacts/vmlinuz

iso: $(DIST)/artifacts/rancheros.iso $(DIST)/artifacts/iso-checksums.txt

integration-tests:
	cd tests/integration && tox

.PHONY: build-all minimal iso installer version bin/rancheros integration-tests
